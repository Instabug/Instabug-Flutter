// Mocks generated by Mockito 5.2.0 from annotations
// in instabug_flutter/example/ios/.symlinks/plugins/instabug_flutter/test/replies_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:instabug_flutter/src/generated/replies.api.g.dart' as _i2;
import 'package:instabug_flutter/src/utils/ibg_build_info.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [RepliesHostApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepliesHostApi extends _i1.Mock implements _i2.RepliesHostApi {
  MockRepliesHostApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> setEnabled(bool? arg_isEnabled) =>
      (super.noSuchMethod(Invocation.method(#setEnabled, [arg_isEnabled]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> show() => (super.noSuchMethod(Invocation.method(#show, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setInAppNotificationsEnabled(bool? arg_isEnabled) =>
      (super.noSuchMethod(
          Invocation.method(#setInAppNotificationsEnabled, [arg_isEnabled]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setInAppNotificationSound(bool? arg_isEnabled) =>
      (super.noSuchMethod(
          Invocation.method(#setInAppNotificationSound, [arg_isEnabled]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<int> getUnreadRepliesCount() =>
      (super.noSuchMethod(Invocation.method(#getUnreadRepliesCount, []),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  _i3.Future<bool> hasChats() =>
      (super.noSuchMethod(Invocation.method(#hasChats, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<void> bindOnNewReplyCallback() =>
      (super.noSuchMethod(Invocation.method(#bindOnNewReplyCallback, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [IBGBuildInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockIBGBuildInfo extends _i1.Mock implements _i4.IBGBuildInfo {
  MockIBGBuildInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAndroid =>
      (super.noSuchMethod(Invocation.getter(#isAndroid), returnValue: false)
          as bool);
  @override
  bool get isIOS =>
      (super.noSuchMethod(Invocation.getter(#isIOS), returnValue: false)
          as bool);
  @override
  String get operatingSystem =>
      (super.noSuchMethod(Invocation.getter(#operatingSystem), returnValue: '')
          as String);
  @override
  bool get isReleaseMode =>
      (super.noSuchMethod(Invocation.getter(#isReleaseMode), returnValue: false)
          as bool);
  @override
  bool get isDebugMode =>
      (super.noSuchMethod(Invocation.getter(#isDebugMode), returnValue: false)
          as bool);
}
