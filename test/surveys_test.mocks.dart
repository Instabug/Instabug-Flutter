// Mocks generated by Mockito 5.4.4 from annotations
// in instabug_flutter/test/surveys_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:instabug_flutter/src/generated/surveys.api.g.dart' as _i2;
import 'package:instabug_flutter/src/utils/ibg_build_info.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SurveysHostApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveysHostApi extends _i1.Mock implements _i2.SurveysHostApi {
  MockSurveysHostApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> setEnabled(bool? arg_isEnabled) => (super.noSuchMethod(
        Invocation.method(
          #setEnabled,
          [arg_isEnabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> showSurveyIfAvailable() => (super.noSuchMethod(
        Invocation.method(
          #showSurveyIfAvailable,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> showSurvey(String? arg_surveyToken) => (super.noSuchMethod(
        Invocation.method(
          #showSurvey,
          [arg_surveyToken],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setAutoShowingEnabled(bool? arg_isEnabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAutoShowingEnabled,
          [arg_isEnabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setShouldShowWelcomeScreen(
          bool? arg_shouldShowWelcomeScreen) =>
      (super.noSuchMethod(
        Invocation.method(
          #setShouldShowWelcomeScreen,
          [arg_shouldShowWelcomeScreen],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setAppStoreURL(String? arg_appStoreURL) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAppStoreURL,
          [arg_appStoreURL],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> hasRespondedToSurvey(String? arg_surveyToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasRespondedToSurvey,
          [arg_surveyToken],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<String?>> getAvailableSurveys() => (super.noSuchMethod(
        Invocation.method(
          #getAvailableSurveys,
          [],
        ),
        returnValue: _i3.Future<List<String?>>.value(<String?>[]),
      ) as _i3.Future<List<String?>>);

  @override
  _i3.Future<void> bindOnShowSurveyCallback() => (super.noSuchMethod(
        Invocation.method(
          #bindOnShowSurveyCallback,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> bindOnDismissSurveyCallback() => (super.noSuchMethod(
        Invocation.method(
          #bindOnDismissSurveyCallback,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [IBGBuildInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockIBGBuildInfo extends _i1.Mock implements _i4.IBGBuildInfo {
  MockIBGBuildInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAndroid => (super.noSuchMethod(
        Invocation.getter(#isAndroid),
        returnValue: false,
      ) as bool);

  @override
  bool get isIOS => (super.noSuchMethod(
        Invocation.getter(#isIOS),
        returnValue: false,
      ) as bool);

  @override
  String get operatingSystem => (super.noSuchMethod(
        Invocation.getter(#operatingSystem),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#operatingSystem),
        ),
      ) as String);

  @override
  bool get isReleaseMode => (super.noSuchMethod(
        Invocation.getter(#isReleaseMode),
        returnValue: false,
      ) as bool);

  @override
  bool get isDebugMode => (super.noSuchMethod(
        Invocation.getter(#isDebugMode),
        returnValue: false,
      ) as bool);
}
