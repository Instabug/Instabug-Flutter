version: 2
jobs:
   android_tests:
    working_directory: ~/project/example/android
    macos:
      xcode: "9.4.0"
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys: 
            - android_cache
      - run:
          name: Setup environment variables
          command: |
            echo 'export PATH="$PATH:/usr/local/opt/node@8/bin:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:/usr/local/share/android-sdk/tools/bin"' >> $BASH_ENV
            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
            echo 'export JAVA_HOME=/Library/Java/Home' >> $BASH_ENV
            echo 'export PATH="$PATH:`pwd`/flutter/bin"'  >> $BASH_ENV
      - run:
          name: Install Android sdk
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Install emulator dependencies
          command: (yes | sdkmanager "platform-tools" "platforms;android-26" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;26.0.0" "system-images;android-26;google_apis;x86" "emulator" --verbose) || true
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      - run: avdmanager create avd -n Pixel_2_API_26 -k "system-images;android-26;google_apis;x86" -g google_apis -d "Nexus 5"
      - run:
          name: Run emulator in background
          command: /usr/local/share/android-sdk/tools/emulator @Pixel_2_API_26 -noaudio -no-boot-anim -no-window
          background: true
      - run:
          name: download flutter SDK
          command: if ! test -f "flutter_sdk.zip"; then curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra/releases/stable/macos/flutter_macos_v1.5.4-hotfix.2-stable.zip; fi
      - run:
          name: unzip flutter SDK
          command: unzip flutter_sdk.zip
      - run: 
          name: Flutter build
          command: cd ..; flutter build aot
      - run:
          name: Download Android Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: Run UI Tests
          command: ./gradlew app:connectedAndroidTest
      - run:
          name: Run Unit Tests
          command: ./gradlew test
      - save_cache:
          key: android_cache
          paths:
            - ~/.gradle
            - flutter_sdk.zip

   flutter_tests:
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - run: sudo gem install bundler:1.16.1
      - run: bundle check || sudo bundle install        
      - run: bundle exec danger
      - run: flutter doctor
      - run: flutter packages get
      - run: flutter test --coverage
      - run: bash <(curl -s https://codecov.io/bash)
      - run: dartanalyzer --options analysis_options.yaml --fatal-warnings lib

   ios_tests:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/example/ios
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys: 
            - flutter-cache
      - run:
          name: download flutter SDK
          command: if ! test -f "flutter_sdk.zip"; then curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra/releases/stable/macos/flutter_macos_v1.5.4-hotfix.2-stable.zip; fi
      - run:
          name: unzip flutter SDK
          command: unzip flutter_sdk.zip
      - run:
          name: export flutter path
          command: echo 'export PATH="$PATH:`pwd`/flutter/bin"'  >> $BASH_ENV 
      - run:
          name: Fetch CocoaPods Specs
          command: curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh  | bash -s cf
      - run: flutter doctor
      - run: 
          name: Flutter build
          command: cd ..; flutter build aot
      - run:
          name: Update CocoaPods
          command: pod update
      - run:
          name: Install CocoaPods
          command: pod install --repo-update
      - run:
          name: Build and run tests
          command:  xcodebuild   -workspace Runner.xcworkspace   -scheme Runner   -sdk iphonesimulator   -destination 'platform=iOS Simulator,name=iPhone X,OS=12.2'   test | xcpretty
      - save_cache:
          key: flutter-cache
          paths:
            - flutter_sdk.zip
            - Pods

   release:
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - run: chmod +x ./release.sh
      - run: ./release.sh

   publish:
    macos:
      xcode: "10.1.0"
    steps:
      - checkout
      - run: git clone https://InstabugCI:$RELEASE_GITHUB_TOKEN@github.com/Instabug/Escape.git
      - run: cd Escape; swift build -c release -Xswiftc -static-stdlib
      - run: cd Escape/.build/release; cp -f Escape /usr/local/bin/escape
      - run: Escape flutter publish
      
workflows:
  version: 2
  build-test-and-approval-deploy:
    jobs:
      - flutter_tests:
          context: cross-platform
      - android_tests
      - ios_tests
      - hold:
          type: approval
          requires:
            - flutter_tests
            - android_tests
            - ios_tests
          filters:
            branches:
              only: master
      - publish:
          context: cross-platform
          requires:
            - hold
          filters:
            branches:
              only: master
      - release:
          context: cross-platform
          requires:
            - hold
          filters:
            branches:
              only: master
              