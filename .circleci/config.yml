version: 2.1

orbs:
  android: circleci/android@2.0
  flutter: circleci/flutter@1.0

jobs:
  danger:
    docker:
      - image: circleci/ruby:2.6.4
    steps:
      - checkout
      - run: bundle install
      - run: bundle exec danger

  test_flutter:
    parameters:
      version:
        type: string
      coverage:
        type: boolean
    docker:
      - image: cirrusci/flutter:<<parameters.version>>
    steps:
      - checkout
      - run: flutter pub get
      - run: sh ./scripts/pigeon.sh
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter test --coverage
      - when:
          condition: <<parameters.coverage>>
          steps:
            - run: bash <(curl -s https://codecov.io/bash)

  test_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2022.04.1
    steps:
      - checkout
      - run:
          name: Install Appium
          command: npm install -g appium
      - run:
          name: Launch Appium
          command: appium
          background: true
      - flutter/install_sdk_and_pub:
          flutter_version: 3.3.0
      - run:
          name: Generate Pigeons
          command: sh ./scripts/pigeon.sh
      - run:
          name: Add Microsoft Packages to APT
          command: |
            wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
            rm packages-microsoft-prod.deb
      - run:
          name: Install .NET
          command: |
            sudo apt-get update
            sudo apt-get install -y dotnet-sdk-6.0
      - run:
          name: Clone Captain
          command: git clone git@github.com:Instabug/Captain.git ../Instabug.Captain
      - android/start-emulator-and-run-tests:
          system-image: system-images;android-30;google_apis;x86
          additional-avd-args: -d "Nexus 5"
          post-emulator-launch-assemble-command: cd example && flutter build apk
          test-command: cd example/e2e && CAPTAIN_PLATFORM=android dotnet test
      - android/run-tests:
          working-directory: example/android
          test-command: ./gradlew test

  ios_tests:
    macos:
      xcode: 13.4.1
    steps:
      - checkout
      - run:
          name: Install Appium
          command: npm install -g appium
      - run:
          name: Launch Appium
          command: appium
          background: true
      - flutter/install_sdk_and_pub:
          flutter_version: 3.3.0
      - run:
          name: Generate Pigeons
          command: sh ./scripts/pigeon.sh
      - run:
          name: Install CocoaPods
          command: sudo gem install cocoapods
      - run:
          name: Install Pods
          working_directory: example/ios
          command: pod install --repo-update
      - run:
          name: Build Example App
          working_directory: example
          command: flutter build ios --simulator
      - run:
          name: Install .NET
          command: brew install --cask dotnet-sdk
      - run:
          name: Clone Captain
          command: git clone git@github.com:Instabug/Captain.git ../Instabug.Captain
      - run:
          name: Run E2E Tests
          working_directory: example/e2e
          command: dotnet test
          environment:
            CAPTAIN_PLATFORM: ios

  format_flutter:
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - run: flutter pub get
      - run:
          name: Check Format
          command: flutter format . --set-exit-if-changed

  lint_flutter:
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - run: flutter pub get
      - run: sh ./scripts/pigeon.sh
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run:
          name: Perform Static Analysis
          command: flutter analyze

  verify_pub:
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - run: flutter pub get
      - run: sh ./scripts/pigeon.sh
      - run:
          name: Check Package Score
          command: flutter pub run pana --no-warning --exit-code-threshold 0
      - run: flutter pub publish --dry-run

  release:
    macos:
      xcode: 13.4.1
    working_directory: "~"
    steps:
      - checkout:
          path: ~/project
      - flutter/install_sdk_and_pub:
          flutter_version: 3.3.6
          app-dir: project
      - run:
          name: Generate Pigeons
          working_directory: project
          command: sh ./scripts/pigeon.sh
      - run:
          name: Clone Escape
          command: git clone git@github.com:Instabug/Escape.git
      - run:
          name: Build Escape
          working_directory: Escape
          command: |
            swift build -c release
            cp -f .build/release/Escape /usr/local/bin/escape
      - run:
          name: Publish Package
          working_directory: project
          command: Escape flutter publish

workflows:
  version: 2
  build-test-and-approval-deploy:
    jobs:
      - danger
      - test_flutter:
          name: test_flutter-stable
          version: stable
          coverage: true
      - test_flutter:
          name: test_flutter-2.10.5
          version: 2.10.5
          coverage: false
      - test_android
      - ios_tests
      - format_flutter
      - lint_flutter:
          requires:
            - format_flutter
      - verify_pub:
          requires:
            - lint_flutter
      - hold_release:
          type: approval
          requires:
            - danger
            - test_flutter-stable
            - test_flutter-2.10.5
            - test_android
            - ios_tests
            - verify_pub
          filters:
            branches:
              only: master
      - release:
          requires:
            - hold_release
          filters:
            branches:
              only: master
