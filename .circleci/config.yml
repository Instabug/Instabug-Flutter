version: 2.1

orbs:
  android: circleci/android@2.0
  flutter: circleci/flutter@2.0.2
  node: circleci/node@5.1.0


commands:
  setup_flutter:
    steps:
      - flutter/install_sdk_and_pub:
          app-dir: packages/instabug_flutter
          version: 3.10.5
      - run:
          name: Generate Pigeons
          working_directory: packages/instabug_flutter
          command: sh ./scripts/pigeon.sh
  setup_ios:
    steps:
      # Flutter doesn't support Apple Silicon yet, so we need to install Rosetta use Flutter on M1 machines.
      - run:
          name: Install Rosetta
          command: softwareupdate --install-rosetta --agree-to-license
      - setup_flutter
      - run:
          name: Install CocoaPods
          command: sudo gem install cocoapods
      - run:
          name: Install Pods
          working_directory: packages/instabug_flutter/example/ios
          command: pod install --repo-update
  setup_captain:
    parameters:
      platform:
        type: enum
        enum:
          - ios
          - android
    steps:
      - run:
          name: Install Appium
          command: npm install -g appium
      - when:
          condition:
            equal:
              - <<parameters.platform>>
              - ios
          steps:
            - run:
                name: Install XCUITest Driver
                command: appium driver install xcuitest@4.35.0
      - when:
          condition:
            equal:
              - <<parameters.platform>>
              - android
          steps:
            - run:
                name: Install UIAutomator2 Driver
                command: appium driver install uiautomator2@2.29.5
      - run:
          name: Launch Appium
          # Enable --relaxed-security for `mobile: shell` command that Captain uses internally.
          command: appium --relaxed-security
          background: true
      - run:
          name: Install .NET 6
          command: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel 6.0.1xx
      - run:
          name: Add .NET to PATH
          command: |
            echo 'export DOTNET_ROOT=$HOME/.dotnet' >> $BASH_ENV
            echo 'export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools' >> $BASH_ENV
      - run:
          name: Clone Captain
          command: git clone git@github.com:Instabug/Captain.git ../Instabug.Captain
      - run:
          name: Configure Captain Platform
          command: echo 'export CAPTAIN_PLATFORM=<<parameters.platform>>' >> $BASH_ENV
  # This runs `flutter pub get` and `dart pub get` if we pass parameter `generate_pigeons` to the job it also runs the following:
  #   - `sh ./scripts/pigeon.sh`
  #   - `dart run build_runner build --delete-conflicting-outputs`
  install_flutter_and_dart_packages:
    parameters:
      generate_pigeons:
        type: boolean
    steps:
      - run:
          name: Install Flutter Packages
          command: flutter pub get
      - run:
          name: Install Dart Packages
          command: dart pub get
          description: Install Dart Packages (for dart explicit packages)
      - when:
          condition:
            equal:
              - <<parameters.generate_pigeons>>
              - true
          steps:
            - run:
                name: Generate Pigeons
                working_directory: packages/instabug_flutter
                command: ./scripts/pigeon.sh
            - run:
                name: Build Pigeons
                working_directory: packages/instabug_flutter
                command: dart run build_runner build --delete-conflicting-outputs

parameters:
  is_changes_detected_for_instabug_dart_http_adapter:
    type: boolean
    default: false
  is_changes_detected_for_instabug_dio_interceptor:
    type: boolean
    default: false
  is_changes_detected_for_instabug_flutter:
    type: boolean
    default: false

jobs:
  extract_pr_info:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: extract base branch
          command: |
            BASE_BRANCH=$(curl -s -H "Authorization: token ${DANGER_GITHUB_API_TOKEN}" $(echo ${CIRCLE_PULL_REQUEST} | sed "s/\/pull\//\/pulls\//" | sed "s/github.com/api.github.com\/repos/") | jq ".base.ref" | tr -d "\042" )
            PR_NUMBER=$(echo ${CIRCLE_PULL_REQUEST} | cut -d "/" -f 7)
            echo "export BASE_BRANCH=$BASE_BRANCH" >> $BASH_ENV
            echo "export PR_NUMBER=$PR_NUMBER" >> $BASH_ENV
      - run:
          name: Verify Base Branch and PR number
          command: |
            # Verify that the BASE_BRANCH environment variable is set.
            echo "Base Branch: $BASE_BRANCH"
            echo "PR NUMBER: $PR_NUMBER"
            printenv BASE_BRANCH
            printenv PR_NUMBER
      - run:
          name: Persist environment variables
          command: cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
  check_for_changes:
    parameters:
      path_to_check:
        type: string
        description: "The sub-path within the repo to check for changes."
      result_env_var:
        type: string
        description: "The environment variable name to store the result of the check."
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          cat bash.env >> $BASH_ENV
      - run:
          name: Verify Base Branch and PR number
          command: |
            # this should print the branch and pr number
            echo "Base Branch: $BASE_BRANCH"
            echo "PR NUMBER: $PR_NUMBER"
            printenv BASE_BRANCH
            printenv PR_NUMBER
      - run:
          name: Check for changes in << parameters.path_to_check >>
          command: |
            # Check for changes
            if git diff --name-only origin/$BASE_BRANCH...HEAD | grep "<< parameters.path_to_check >>"; then
              echo 'export << parameters.result_env_var >>=true' >> $BASH_ENV
              echo "Changes detected in << parameters.path_to_check >>"
            else
              echo 'export << parameters.result_env_var >>=false' >> $BASH_ENV
              echo "No changes detected in << parameters.path_to_check >>"
            fi

  # Instabug Dart Http Adapter
  test_instabug_dart_http_adapter:
    parameters:
      is_changes_detected_for_instabug_dart_http_adapter:
        type: boolean
        default: false
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - run:
          name: Condition check for running tests
          command: |
            if [ "$IS_CHANGES_DETECTED_FOR_INSTABUG_DART_HTTP_ADAPTER" = "false" ] && [ << parameters.is_changes_detected_for_instabug_dart_http_adapter >> = false ]; then
              echo "Skipping tests because no changes were detected."
              circleci-agent step halt
            fi
      - run:
          name: Flutter doctor
          command: flutter doctor
      - run:
          name: Install Flutter Packages
          working_directory: packages/instabug_dart_http_adapter
          command: flutter pub get
      - run:
          name: Generate code with build runner
          working_directory: packages/instabug_dart_http_adapter
          command: dart run build_runner build --delete-conflicting-outputs
      - run:
          name: Run tests
          working_directory: packages/instabug_dart_http_adapter
          command: flutter test
      - run:
          name: Dart Analysis
          working_directory: packages/instabug_dart_http_adapter
          command: dart analyze --fatal-warnings lib
      - run:
          name: Publish dry run
          working_directory: packages/instabug_dart_http_adapter
          command: flutter pub publish --dry-run
  release_instabug_dart_http_adapter:
    docker:
      - image: cirrusci/flutter
    working_directory: packages/instabug_dart_http_adapter
    steps:
      - checkout
      - run: chmod +x release.sh
      - run: ./release.sh
  # -----------------------------------------------------------------------


  # Instabug Dio Interceptor

  test_instabug_dio_interceptor:
    parameters:
      is_changes_detected_for_instabug_dio_interceptor:
        type: boolean
        default: false
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - run:
          name: Condition check for running tests
          command: |
            if [ "IS_CHANGES_DETECTED_FOR_INSTABUG_DIO_INTERCEPTOR" = "false" ] && [ << parameters.is_changes_detected_for_instabug_dio_interceptor >> = false ]; then
              echo "Skipping tests because no changes were detected."
              circleci-agent step halt
            fi
      - run:
          name: Flutter doctor
          command: flutter doctor
      - run:
          name: Install Flutter Packages
          working_directory: packages/instabug_dio_interceptor
          command: flutter pub get
      - run:
          name: Generate code with build runner
          working_directory: packages/instabug_dart_http_adapter
          command: dart run build_runner build --delete-conflicting-outputs
      - run:
          name: Run tests
          working_directory: packages/instabug_dio_interceptor
          command: flutter test
      - run:
          name: Dart Analysis
          working_directory: packages/instabug_dio_interceptor
          command: dart analyze .
      - run:
          name: Publish dry run
          working_directory: packages/instabug_dio_interceptor
          command: flutter pub publish --dry-run

  release_instabug_dio_interceptor:
    docker:
      - image: cirrusci/flutter
    working_directory: packages/instabug_dio_interceptor
    steps:
      - checkout
      - run: ./release.sh

  # -----------------------------------------------------------------------

  # Instabug Flutter SDK
  danger:
    parameters:
      is_changes_detected_for_instabug_dio_interceptor:
        type: boolean
        default: false
    working_directory: packages/instabug_flutter
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          name: Condition check for running tests
          command: |
            if [ "IS_CHANGES_DETECTED_FOR_INSTABUG_DIO_INTERCEPTOR" = "false" ] && [ << parameters.is_changes_detected_for_instabug_dio_interceptor >> = false ]; then
              echo "Skipping tests because no changes were detected."
              circleci-agent step halt
            fi
      - run:
          name: Check directory
          command: |
            pwd
            ls
      - node/install-packages:
          app-dir: packages/instabug_flutter
          pkg-manager: yarn
          override-ci-command: yarn install --frozen-lockfile --network-concurrency 1
      - attach_workspace:
          at: coverage
      - run:
          name: Check pwd n ls
          command: |
            pwd
            ls
      - run:
          name: ck pwd n ls in packages/instabug_flutter
          working_directory: packages/instabug_flutter
          command: |
            pwd
            ls
      - run:
          name: Run Danger
          working_directory: packages/instabug_flutter
          command: cd packages/instabug_flutter && yarn danger ci

  test_flutter:
    working_directory: packages/instabug_flutter
    parameters:
      version:
        type: string
    docker:
      - image: cirrusci/flutter:<<parameters.version>>
    steps:
      - checkout
      - install_flutter_and_dart_packages:
          generate_pigeons: true
      - run:
          working_directory: packages/instabug_flutter
          command: flutter test --coverage
      - run:
          working_directory: packages/instabug_flutter/coverage
          command: lcov --remove lcov.info '*.g.dart' '*.mocks.dart' -o lcov.info
      - persist_to_workspace:
          root: packages/instabug_flutter/coverage
          paths:
            - lcov.info

  test_android:
    working_directory: packages/instabug_flutter
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2022.04.1
    steps:
      - checkout
      - setup_flutter
      - android/start-emulator-and-run-tests:
          system-image: system-images;android-30;google_apis;x86
          additional-avd-args: -d "Nexus 5"
          post-emulator-launch-assemble-command: cd packages/instabug_flutter/example && flutter build apk
          run-tests-working-directory: packages/instabug_flutter/example/android
          test-command: ./gradlew app:connectedAndroidTest -Ptarget=`pwd`/../test_driver/example.dart
      - android/run-tests:
          working-directory: packages/instabug_flutter/example/android
          test-command: ./gradlew test

  e2e_android_captain:
    working_directory: packages/instabug_flutter
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2022.04.1
    steps:
      - checkout
      - setup_captain:
          platform: android
      - setup_flutter
      - android/start-emulator-and-run-tests:
          system-image: system-images;android-30;google_apis;x86
          additional-avd-args: -d "pixel_4"
          post-emulator-launch-assemble-command: cd packages/instabug_flutter/example || true && flutter build apk --debug
          test-command: cd packages/instabug_flutter/example && e2e || true && dotnet test

  test_ios:
    working_directory: packages/instabug_flutter
    macos:
      xcode: 13.4.1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - setup_ios
      - run:
          name: Build and run tests
          working_directory: packages/instabug_flutter/example/ios
          command: |
            xcodebuild -allowProvisioningUpdates \
                       -workspace Runner.xcworkspace \
                       -scheme Runner \
                       -sdk iphonesimulator \
                       -destination 'name=iPhone 12 Pro Max' \
                       test | xcpretty

  e2e_ios_captain:
    macos:
      xcode: 13.4.1
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - setup_captain:
          platform: ios
      - setup_ios
      - run:
          name: Build Example App
          working_directory: packages/instabug_flutter/example
          command: flutter build ios --simulator
      - run:
          name: Run E2E Tests
          no_output_timeout: 30m
          working_directory: packages/instabug_flutter/e2e
          command: dotnet test

  format_flutter:
    working_directory: packages/instabug_flutter
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - install_flutter_and_dart_packages:
          generate_pigeons: false
      - run:
          name: Check Format
          command: dart format . --set-exit-if-changed

  lint_flutter:
    working_directory: packages/instabug_flutter
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - install_flutter_and_dart_packages:
          generate_pigeons: true
      - run:
          name: Perform Static Analysis
          command: |
            ls
            pwd
            flutter analyze

  verify_pub:
    working_directory: packages/instabug_flutter
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout
      - install_flutter_and_dart_packages:
          generate_pigeons: true
      - run:
          name: Check Package Score
          command: dart run pana --no-warning --exit-code-threshold 0
      - run: flutter pub publish --dry-run

  release_instabug_flutter:
    macos:
      xcode: 13.4.1
    resource_class: macos.m1.medium.gen1
    working_directory: "~"
    steps:
      - checkout:
          path: ~/project
      # Flutter doesn't support Apple Silicon yet, so we need to install Rosetta use Flutter on M1 machines.
      - run:
          name: Install Rosetta
          command: softwareupdate --install-rosetta --agree-to-license
      - flutter/install_sdk_and_pub:
          version: 3.3.6
          app-dir: project/packages/instabug_flutter
      - run:
          name: Install pub packages
          working_directory: ~/project/packages/instabug_flutter
          command: dart pub get
      - run:
          name: Generate Pigeons
          working_directory: ~/project/packages/instabug_flutter
          command: sh ./scripts/pigeon.sh
      - run:
          name: Clone Escape
          command: git clone git@github.com:Instabug/Escape.git
      - run:
          name: Build Escape
          working_directory: Escape
          command: |
            swift build -c release
            cp -f .build/release/Escape /usr/local/bin/escape
      - run:
          name: Publish Package
          working_directory: ~/project/packages/instabug_flutter
          command: Escape flutter publish



workflows:
  version: 2
  build-instabug_dart_http_adapter:
    jobs:
      - extract_pr_info
      - check_for_changes:
          path_to_check: "packages/instabug_dart_http_adapter"
          result_env_var: "IS_CHANGES_DETECTED_FOR_INSTABUG_DART_HTTP_ADAPTER"
          requires:
            - extract_pr_info
      - test_instabug_dart_http_adapter:
          requires:
            - check_for_changes
          is_changes_detected_for_instabug_dart_http_adapter: << pipeline.parameters.is_changes_detected_for_instabug_dart_http_adapter >>
      - hold_instabug_dart_http_adapter:
          type: approval
          requires:
            - test_instabug_dart_http_adapter
          filters:
            branches:
              only: master

      - release_instabug_dart_http_adapter:
          requires:
            - hold_instabug_dart_http_adapter
          filters:
            branches:
              only: master

  build-instabug-dio-interceptor:
    jobs:
      - extract_pr_info
      - check_for_changes:
          path_to_check: "packages/instabug_dio_interceptor"
          result_env_var: "IS_CHANGES_DETECTED_FOR_INSTABUG_DIO_INTERCEPTOR"
          requires:
            - extract_pr_info
      - test_instabug_dio_interceptor:
          requires:
            - check_for_changes
          is_changes_detected_for_instabug_dio_interceptor: << pipeline.parameters.is_changes_detected_for_instabug_dio_interceptor >>
      - hold_instabug_dio_interceptor:
          type: approval
          requires:
            - test_instabug_dio_interceptor
          filters:
            branches:
              only: master
      - release_instabug_dio_interceptor:
          requires:
            - hold_instabug_dio_interceptor
          filters:
            branches:
              only: master

  build-test-and-approval-deploy-instabug-flutter:
    jobs:
      - extract_pr_info
      - check_for_changes:
          path_to_check: "packages/instabug_flutter"
          result_env_var: "IS_CHANGES_DETECTED_FOR_INSTABUG_FLUTTER"
          requires:
            - extract_pr_info
      - danger:
          requires:
            - test_flutter-stable
            - check_for_changes
      - test_flutter:
          name: test_flutter-stable
          version: stable
      - test_flutter:
          name: test_flutter-2.10.5
          version: 2.10.5
      - test_android:
          requires:
            - check_for_changes
      - e2e_android_captain:
          requires:
            - check_for_changes
      - test_ios:
          requires:
            - check_for_changes
      - e2e_ios_captain:
          requires:
            - check_for_changes
      - format_flutter:
          requires:
            - check_for_changes
      - lint_flutter:
          requires:
            - format_flutter
            - check_for_changes
      - verify_pub:
          requires:
            - lint_flutter
            - check_for_changes
      - hold_release_instabug_flutter:
          type: approval
          requires:
            - danger
            - test_flutter-stable
            - test_flutter-2.10.5
            - test_android
            - e2e_android_captain
            - test_ios
            - e2e_ios_captain
            - verify_pub
          filters:
            branches:
              only: master
      - release_instabug_flutter:
          requires:
            - hold_release_instabug_flutter
          filters:
            branches:
              only: master

